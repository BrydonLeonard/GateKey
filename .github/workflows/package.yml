name: Publish and deploy

on:
  push:
    branches:
      - action-dev-1
      - mainline
jobs:
  push_to_registry:
    name: Build and push to docker hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
        
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      
      - name: Execute Gradle build
        run: ./gradlew build
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: brydonleonard/gate_key
          
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  pull_and_deploy:
    needs: [push_to_registry]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: SSH, pull down, and start
      uses: appleboy/ssh-action@master
      with:
        host: ssh.brydonleonard.com
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIV_KEY }}
        port: 22
        command_timeout: 30m
        script: | 
          # Pull the image from docker hub
          docker image pull brydonleonard/gate_key:mainline

          # Create the volume. Does nothing if the volume exists
          docker volume create \
            --driver local \
            --opt type=none \
            --opt device=/usr/local/GateKey/persistent \
            --opt o=bind \
            GateKeyVolume

          # Stop and delete the old container
          # Suppress errors in case the old container doesn't exist or isn't running
          docker stop GateKey || true
          docker rm GateKey || true

          # Start the new container
          sudo docker run \
            --env GATE_KEY_ALLOWED_CALLERS=${{ secrets.GATE_KEY_ALLOWED_CALLERS }} \
            --env GATE_KEY_TELEGRAM_BOT_TOKEN=${{ secrets.GATE_KEY_TELEGRAM_BOT_TOKEN }} \
            --env GATE_KEY_CERT_PASSWORD=${{ secrets.GATE_KEY_CERT_PASSWORD }} \
            --volume GateKeyVolume:/persistent \
            --name=GateKey \
            --detach \
            brydonleonard/gate_key:mainline
          
